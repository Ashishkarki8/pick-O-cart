
npm i passport passport-google-oauth20 express-session i installed
npm i @reduxjs/toolkit react-redux axios react-router-dom

aba sadcn ko lagi tailwind css ra sab configure garesi we create a file name

jsconfig.json
{
    
    "compilerOptions": {
      "baseUrl": ".",
      "paths": {
        "@/*": ["./src/*"]
      }
    }
  }
  
and in vite.config.jsconfigimport { defineConfig } from 'vite'
import react from '@vitejs/plugin-react-swc'
import path from 'path'
import { fileURLToPath } from 'url'

// Fix for __dirname in ESM  
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
    },
  },
})


after that 
npx shadcn@latest init

shadcn@2.1.8
Ok to proceed? (y) y

✔ Preflight checks.
✔ Verifying framework. Found Vite.
✔ Validating Tailwind CSS.
✔ Validating import alias.
√ Which style would you like to use? » Default
√ Which color would you like to use as the base color? » Slate
√ Would you like to use CSS variables for theming? ... no / yes
✔ Writing components.json.
✔ Checking registry.
✔ Updating tailwind.config.js
✔ Updating src\index.css
✔ Installing dependencies.
✔ Created 1 file:
  - src\lib\utils.js

  ani aba frontend bhitra components bhanni folder banauni rah yo code halni
  npx shadcn@latest add button







Yes, if your editor (like VSCode) is defaulting to CommonJS (require) imports when you press Ctrl + Space, you can configure it to use ES Modules (import/export) instead. Additionally, there are extensions and settings that can help enforce and fix import styles.

Steps to Fix Automatic Imports in VSCode
1. Ensure "type": "module" in package.json
First, confirm that you have set "type": "module" in your package.json file to enable ES Modules:

json
Copy code
{
  "type": "module"
}
This tells Node.js and VSCode that your project uses ES Modules syntax.

2. Check VSCode Settings
VSCode uses TypeScript's IntelliSense for suggestions, so configure it to prefer ES Modules.

Open Settings:

Go to File > Preferences > Settings (or press Ctrl + ,).
Search for Import Module:

Look for a setting called javascript.preferences.importModuleSpecifier.
Set it to non-relative or auto for clean, module-based imports.
Example in settings.json:

json
Copy code
"javascript.preferences.importModuleSpecifier": "non-relative",
"typescript.preferences.importModuleSpecifier": "non-relative"
Update Import Style: Ensure the following settings in settings.json:

json
Copy code
"javascript.format.enable": true,
"javascript.preferences.quoteStyle": "single",
"javascript.preferences.importModuleSpecifierEnding": "auto"
3. Extensions to Improve Imports
Here are some useful VSCode extensions to help with ES Modules imports:

ESLint
Ensures consistent code style, including import statements.

Automatically fixes require() to import using ESLint rules.

Installation:

Search for ESLint in the VSCode Extensions panel.
Configuration: Add the following ESLint rule in your .eslintrc file:   @ext:dbaeumer.vscode-eslint

json
Copy code
"rules": {
  "no-restricted-syntax": ["error", "CallExpression[callee.name='require']"]
}
This will warn you if you use require() instead of import.

Auto Import
Automatically adds ES Module imports when you type a function or variable name.

Installation:

Search for Auto Import by Steoates in the Extensions pan



